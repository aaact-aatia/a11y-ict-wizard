# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- 2025-pipeline-rollback

resources:
- repo: self

variables:
  # Container registry config
  dockerRegistryServiceConnection: 'proditcaccessibilityRegistry-sc'
  imageRepository: '2025-ayreqgit'
  containerRegistry: 'proditcaccessibilityregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  rootFolder: $(System.DefaultWorkingDirectory)
  name: 20250410.$(Rev:r)
  tag: '$(Build.BuildNumber)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        echo "---- Starting PreBuild ----"
        cp tmp_Dockerfile Dockerfile
        echo "Substituting variables into Dockerfile..."
        sed -i "s|_BASICAUTHUSERNAME_|$(BASICAUTHUSERNAME)|" Dockerfile
        sed -i "s|_BASICAUTHPASSWORD_|$(BASICAUTHPASSWORD)|" Dockerfile
        sed -i "s|_WAITHOSTS_|$(WAITHOSTS)|" Dockerfile
        sed -i "s|_DBURI_|$(DBURI)|" Dockerfile
        echo "---- Variable Substitution Complete ----"
        echo "DBURI: $(DBURI)"
        echo "BASICAUTHUSERNAME: $(BASICAUTHUSERNAME)"
        echo "WAITHOSTS: $(WAITHOSTS)"
      workingDirectory: $(rootFolder)
      displayName: 'PreBuild (2025)'

    - task: Docker@2
      displayName: Build image for Azure App Service (linux/amd64)
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        buildContext: $(Build.SourcesDirectory)
        addPipelineData: false
        enableBuildKit: true
        arguments: '--platform linux/amd64'

    - task: Docker@2
      displayName: Push image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # Create a downloadable artifact
    - task: PublishBuildArtifacts@1
      displayName: 'Publish source as artifact'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: '_Prod-2025-a11y-req.git'
        publishLocation: 'Container'
