FROM node:22

ENV NODE_ENV "production"
ENV POPULATE_DB "true"

# Change me in production
ENV DB_URI "_DBURI_"
ENV BASIC_AUTH_USERNAME "_BASICAUTHUSERNAME_"
ENV BASIC_AUTH_PASSWORD "_BASICAUTHPASSWORD_"
ENV WAIT_FOR_MONGO "_WAITFORMONGO_"
ENV WAIT_HOSTS "_WAITHOSTS_"

# Installing NGINX for reverse proxy
RUN apt update && \
	apt install -y nginx && \
	rm /etc/nginx/sites-available/default && \
	rm /etc/nginx/sites-enabled/default

RUN apt-get install -y net-tools

# Add the MongoDB repository and install the latest MongoDB
RUN wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | apt-key add - && \
	echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/debian bullseye/mongodb-org/6.0 main" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list && \
	echo "deb http://deb.debian.org/debian bullseye main" > /etc/apt/sources.list.d/bullseye.list && \
	apt-get update && \
	apt-get install -y libssl1.1 && \
	apt-get install -y mongodb-org

# dos2unix used to convert scripts written on windows systems to unix formats
RUN apt-get install -y dos2unix
RUN mkdir /home/app

# install node process manager pm2
RUN npm install -g pm2

WORKDIR /home/app
SHELL ["/bin/bash", "-c"]

RUN wget -q https://fastdl.mongodb.org/tools/db/mongodb-database-tools-debian92-x86_64-100.0.2.tgz && \
	tar -xzf mongodb-database-tools-debian92-x86_64-100.0.2.tgz && \
	mv mongodb-database-tools-debian92-x86_64-100.0.2 mongotools && \
	chmod 777 ./mongotools/bin/mongorestore 

RUN apt-get install -y netcat
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait ./wait
RUN chmod +x ./wait

COPY ./nginx ./nginx

# copying over nginx vhost to appropriate location and testing configuration
RUN dos2unix ./nginx/default.conf && \
	mv ./nginx/default.conf /etc/nginx/sites-enabled/default

RUN dos2unix ./nginx/nginx.conf && \
	mv ./nginx/nginx.conf /etc/nginx/nginx.conf && \
	nginx -t 

RUN dos2unix ./nginx/mongodb.conf && \
	mv ./nginx/mongodb.conf /etc/mongodb.conf

# Sanity check: show working dir before copy
RUN echo "Current WORKDIR is $(pwd)"

# copy over application files 
COPY . .

# DEBUG: Show files copied into /home/app
RUN echo "Verifying contents of /home/app..." && \
	ls -al /home/app && \
	find /home/app -type f

# install dependencies 
RUN npm install

RUN apt-get update && apt-get install -y vim
RUN apt-get update && apt-get install -y ssh
RUN echo "root:Docker!" | chpasswd
RUN mkdir /run/sshd
COPY sshd_config /etc/ssh/

RUN dos2unix ./scripts/start.sh

# make startup script executable 
RUN chmod 777 ./scripts/start.sh 

# Expose environment port if available (defaults to 443 if not provided)
EXPOSE ${PORT:-443}

# Run as root to manage npm and pm2
USER root

# The final entrypoint to start the app using pm2
ENTRYPOINT [ "/bin/bash", "scripts/start.sh" ]